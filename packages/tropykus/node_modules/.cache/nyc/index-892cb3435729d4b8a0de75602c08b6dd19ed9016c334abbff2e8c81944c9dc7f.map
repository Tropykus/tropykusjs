{"version":3,"sources":["index.js"],"names":["Tropykus","providerURL","ethersProvider","ethers","providers","JsonRpcProvider","internalController","controllerAddress","Comptroller","markets"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,Q;AACjB,oBAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKC,cAAL,GAAsB,IAAIC,eAAOC,SAAP,CAAiBC,eAArB,CAAqCJ,WAArC,CAAtB;AACA,SAAKK,kBAAL,GAA0B,IAA1B;AACH;AAED;AACJ;AACA;AACA;;;;;SACI,eAAkB;AAAE,aAAO,KAAKA,kBAAZ;AAAiC;AAErD;AACJ;AACA;AACA;;;;WACI,wBAAeC,iBAAf,EAAkC;AAC9B,WAAKD,kBAAL,GAA0B,IAAIE,uBAAJ,CAAgBD,iBAAhB,EAAmC,KAAKL,cAAxC,CAA1B;AACA,WAAKO,OAAL;AACH","sourceRoot":"/home/ronaldsg/TRU/Tropykus/tropykusjs/packages/tropykus/src/","sourcesContent":["import {ethers} from \"ethers\";\nimport Comptroller from \"./Comptroller\";\n\nexport default class Tropykus {\n    constructor(providerURL) {\n        this.ethersProvider = new ethers.providers.JsonRpcProvider(providerURL);\n        this.internalController = null;\n    }\n\n    /**\n     * Returns the initialized controller instance.\n     * @return {Comptroller}\n     */\n    get comptroller() { return this.internalController; }\n\n    /**\n     * By providing the on chain deployed controller address, a controller instance is made available.\n     * @param {string} controllerAddress on chain deployed controller address.\n     */\n    setComptroller(controllerAddress) {\n        this.internalController = new Comptroller(controllerAddress, this.ethersProvider);\n        this.markets();\n    }\n}\n"]}